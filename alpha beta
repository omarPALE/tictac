const humanPlayer = 'X';
// const aiPlayer = 'O';
// let currentPlayer = humanPlayer;
// let board = [['', '', ''], ['', '', ''], ['', '', '']];

// // Returns true if the specified player has won
// function hasPlayerWon(player, board) {
//   for (let i = 0; i < 3; i++) {
//     if (board[i][0] === player && board[i][1] === player && board[i][2] === player) {
//       return true;
//     }
//     if (board[0][i] === player && board[1][i] === player && board[2][i] === player) {
//       return true;
//     }
//   }
//   if (board[0][0] === player && board[1][1] === player && board[2][2] === player) {
//     return true;
//   }
//   if (board[0][2] === player && board[1][1] === player && board[2][0] === player) {
//     return true;
//   }
//   return false;
// }

// // Returns true if the board is full
// function isBoardFull(board) {
//   for (let i = 0; i < 3; i++) {
//     for (let j = 0; j < 3; j++) {
//       if (board[i][j] === '') {
//         return false;
//       }
//     }
//   }
//   return true;
// }

// // Returns the score for the current board state
// function evaluate(board) {
//   if (hasPlayerWon(aiPlayer, board)) {
//     return 1;
//   }
//   if (hasPlayerWon(humanPlayer, board)) {
//     return -1;
//   }
//   return 0;
// }

// // Returns the best score for the current board state
// function minimax(board, depth, isMaximizingPlayer, alpha, beta) {
//   const score = evaluate(board);
//   if (score !== 0 || isBoardFull(board)) {
//     return score;
//   }
//   if (isMaximizingPlayer) {
//     let bestScore = -Infinity;
//     for (let i = 0; i < 3; i++) {
//       for (let j = 0; j < 3; j++) {
//         if (board[i][j] === '') {
//           board[i][j] = aiPlayer;
//           const currentScore = minimax(board, depth + 1, false, alpha, beta);
//           board[i][j] = '';
//           bestScore = Math.max(bestScore, currentScore);
//           alpha = Math.max(alpha, bestScore);
//           if (beta <= alpha) {
//             break;
//           }
//         }
//       }
//     }
//     return bestScore;
//   } else {
//     let bestScore = Infinity;
//     for (let i = 0; i < 3; i++) {
//       for (let j = 0; j < 3; j++) {
//         if (board[i][j] === '') {
//           board[i][j] = humanPlayer;
//           const currentScore = minimax(board, depth + 1, true, alpha, beta);
//           board[i][j] = '';
//           bestScore = Math.min(bestScore, currentScore);
//           beta = Math.min(beta, bestScore);
//           if (beta <= alpha) {
//             break;
//           }
//         }
//       }
//     }
//     return bestScore;
//   }
// }

// // Makes the AI player's move
// function makeAIMove(board) {
//     let bestScore = -Infinity;
//     let bestMove = {};
//     for (let i = 0; i < 3; i++) {
//       for (let j = 0; j < 3; j++) {
//         if (board[i][j] === '') {
//           board[i][j] = aiPlayer;
//           const score = minimax(board, 0, false, -Infinity, Infinity);
//           board[i][j] = '';
//           if (score > bestScore) {
//             bestScore = score;
//             bestMove = {row: i, col: j};
//           }
//         }
//       }
//     }
//     board[bestMove.row][bestMove.col] = aiPlayer;
//     currentPlayer = humanPlayer;
//     drawBoard();
//   }
  // Draws the game board on the screen
// function drawBoard() {
//     const boardElement = document.querySelector('.board');
//     for (let i = 0; i < 3; i++) {
//       for (let j = 0; j < 3; j++) {
//         const cellElement = boardElement.rows[i].cells[j];
//         cellElement.textContent = board[i][j];
//       }
//     }
//   }
